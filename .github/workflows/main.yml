name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
      - feat/*
      - beta-*
      - wip-*

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "21.6.2"
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn --ignore-engines

#      - name: Test
#        run: |
#          yarn test

  deploy:
#    needs: test
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/beta-') || startsWith(github.ref, 'refs/heads/wip-')

    strategy:
      matrix:
        include:
          - name: mac
            label: macOS ARM
            os: macos-14
          - name: mac-intel
            label: macOS Intel
            os: macos-14
 #         - name: win32
 #           label: Windows 32-bit
 #           os: ubuntu-latest
          - name: win64
            label: Windows 64-bit
            os: ubuntu-latest
          - name: linux
            label: Linux
            os: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "21.6.2"
          cache: "yarn"

      - name: Install Dependencies
        run: |
          yarn --ignore-engines

#      - name: Update credits
#        env:
#          PATREON_ACCESS_TOKEN: ${{ secrets.PATREON_ACCESS_TOKEN }}
#          PATREON_CAMPAIGN_ID: ${{ secrets.PATREON_CAMPAIGN_ID }}
#        run: |
#          npm run fetch-contributors
#          npm run fetch-patrons

      # ==== Builds ====

      - name: Build Mac ARM
        if: matrix.name == 'mac'
        run: |
          yarn make:mac
          mkdir -p ./out/keep
          mv ./out/make/zip/darwin/arm64/*.zip ./out/keep/bb-studio-${GITHUB_REF##*/}-darwin_arm64.zip

      - name: Build Mac Intel
        if: matrix.name == 'mac-intel'
        run: |
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          yarn make:mac-intel
          mkdir -p ./out/keep
          mv ./out/make/zip/darwin/x64/*.zip ./out/keep/bb-studio-${GITHUB_REF##*/}-darwin_x64.zip

      - name: Build Linux
        if: matrix.name == 'linux'
        run: |
          yarn make:linux
          mkdir -p ./out/keep
          mv ./out/make/deb/x64/*.deb ./out/keep/bb-studio-${GITHUB_REF##*/}-linux_x86_64.deb
          mv ./out/make/rpm/x64/*.rpm ./out/keep/bb-studio-${GITHUB_REF##*/}-linux_x86_64.rpm
          mv ./out/make/AppImage/x64/*.AppImage ./out/keep/bb-studio-${GITHUB_REF##*/}-linux_x86_64.AppImage

      - name: Build Win32
        if: matrix.name == 'win32'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get -y update
          sudo apt-get -y install wine wine64 mono-devel
          export PATH=$PATH:/usr/lib/wine
          yarn make:win32
          mkdir -p ./out/keep
          mv ./out/make/zip/win32/ia32/*.zip ./out/keep/bb-studio-${CIRCLE_BRANCH}-windows_x86.zip

      - name: Build Win64
        if: matrix.name == 'win64'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get -y update
          sudo apt-get -y install wine wine64 mono-devel
          export PATH=$PATH:/usr/lib/wine
          yarn make:win
          mkdir -p ./out/keep
          mv ./out/make/zip/win32/x64/*.zip ./out/keep/bb-studio-${CIRCLE_BRANCH}-windows_x86_64.zip

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.label }} build
          path: |
            ./out/keep/**
